buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath 'com.google.gms:google-services:4.3.15'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'
    }
}

plugins {
    id "nebula.lint" version "16.9.0"
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.google.com' }
        //maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://jitpack.io" }
    }
    // Nebula
//    apply plugin :"nebula.lint"
//    gradleLint {
//        rules=['unused-dependency']
//    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

// Loads properties from the giving filepath.
ext.loadProperties = { filepath ->
    def propertiesFile = new File(filepath)
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    return properties
}

// Loads properties from the giving filepath, or simply
// returns empty properties if the file does not exist.
ext.optionallyLoadProperties = { filepath ->
    try {
        return loadProperties(filepath)
    } catch (IOException ignored) {
        project.logger.error("Properties file not found: " + filepath)
        return new Properties()
    }
}

ext.loadLocalProperties = { project ->
    try {
        def localPropertiesFile = project.file("local.properties")
        return loadProperties(localPropertiesFile.absolutePath)
    } catch (IOException ignored) {
        project.logger.error("local.properties file not found")
        return new Properties()
    }
}

ext.isCI = {
    return System.getenv("GITHUB_ACTIONS") == "true"
}

ext.getReleaseConfigDir = {
    if (isCI()) {
        return "${project.rootDir}/tools/config/debug"
    } else {
        return "${project.rootDir}/tools/config/release"
    }
}

apply from: 'gradleScript/dependencies.gradle'
apply plugin: 'com.frolo.plugin.measure_build'
